<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Chat App</title>
    <meta charset="UTF-8">
    <link rel="icon" href="/favicon.svg">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
   
    <style>
      #video-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, 300px);
        grid-auto-rows: 300px;
      }
      video {
        width: 100%;
        height: 100%;
        object-fit: cover;
      }
    </style>
    <script>
        const ROOM_ID = "<%= roomId %>"
    </script>
    <script src="https://unpkg.com/peerjs@1.5.1/dist/peerjs.min.js"></script>
    <script src="/socket.io/socket.io.js" defer></script>
    <script src="client.js" defer></script>
  </head>
  <body>
    <div id="video-grid"></div>
<!-- 
    <h1>Chat App</h1>
    <div id="messages"></div>
    <form id="message-form">
      <input type="text" name="message" placeholder="Message" autocomplete="off" />
      <button>Send</button>
    </form>
    <script src="/socket.io/socket.io.js"></script>
    <script type="module">
      const socket = io()
      const messageForm = document.querySelector('#message-form')
      const messageInput = messageForm.querySelector('input')
      const messagesDiv = document.querySelector('#messages')

      messageForm.addEventListener('submit', (event) => {
        event.preventDefault()
        const message = messageInput.value.trim()
        if (message) {
          socket.emit('sendMessage', message, () => {
            messageInput.value = ''
            messageInput.focus()
          })
        }
      })

      socket.on('message', (message) => {
        const messageElement = document.createElement('div')
        messageElement.textContent = message
        messagesDiv.appendChild(messageElement)
      })
    </script> -->
  </body>
</html>
